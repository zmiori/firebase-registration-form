{"version":3,"sources":["webpack:///./js/index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseui","auth","AuthUI","refs","emailInput","document","querySelector","passwordInput","loginBtn","signupBtn","logoutBtn","alertNotAUser","localStorage","getItem","classList","add","remove","addEventListener","e","email","value","password","signInWithEmailAndPassword","then","catch","console","log","message","createUserWithEmailAndPassword","signOut","clear","onAuthStateChanged","firebaseUser","setItem","JSON","stringify"],"mappings":"6FAAA,+DAmBAA,IAASC,cAXc,CACrBC,OAAQ,0CACRC,WAAY,kCACZC,YACE,yEACFC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,8CAII,IAAIC,WAAWC,KAAKC,OAAOX,IAASU,QAAjD,IAEME,EAAO,CACXC,WAAYC,SAASC,cAAc,gBACnCC,cAAeF,SAASC,cAAc,mBACtCE,SAAUH,SAASC,cAAc,UACjCG,UAAWJ,SAASC,cAAc,WAClCI,UAAWL,SAASC,cAAc,WAClCK,cAAeN,SAASC,cAAc,sBAKzBM,aAAaC,QAAQ,kBAEhCV,EAAKC,WAAWU,UAAUC,IAAI,aAC9BZ,EAAKI,cAAcO,UAAUC,IAAI,aACjCZ,EAAKK,SAASM,UAAUC,IAAI,aAC5BZ,EAAKM,UAAUK,UAAUC,IAAI,aAC7BZ,EAAKO,UAAUI,UAAUE,OAAO,cAMpCb,EAAKK,SAASS,iBAAiB,SAAS,SAAAC,GACtC,IAAMC,EAAQhB,EAAKC,WAAWgB,MACxBC,EAAWlB,EAAKI,cAAca,MACvB7B,IAASU,OACFqB,2BAA2BH,EAAOE,GAEnDE,MAAK,SAAAL,GACJf,EAAKC,WAAWU,UAAUC,IAAI,aAC9BZ,EAAKI,cAAcO,UAAUC,IAAI,aACjCZ,EAAKK,SAASM,UAAUC,IAAI,aAC5BZ,EAAKM,UAAUK,UAAUC,IAAI,aAC7BZ,EAAKQ,cAAcG,UAAUC,IAAI,aACjCZ,EAAKO,UAAUI,UAAUE,OAAO,gBAEjCQ,OAAM,SAAAN,GACLO,QAAQC,IAAIR,EAAES,SACdxB,EAAKQ,cAAcG,UAAUE,OAAO,mBAK1Cb,EAAKM,UAAUQ,iBAAiB,SAAS,SAAAC,GACvC,IAAMC,EAAQhB,EAAKC,WAAWgB,MACxBC,EAAWlB,EAAKI,cAAca,MACvB7B,IAASU,OACF2B,+BAA+BT,EAAOE,GAEvDE,MAAK,SAAAL,GACJf,EAAKC,WAAWU,UAAUC,IAAI,aAC9BZ,EAAKI,cAAcO,UAAUC,IAAI,aACjCZ,EAAKK,SAASM,UAAUC,IAAI,aAC5BZ,EAAKM,UAAUK,UAAUC,IAAI,aAC7BZ,EAAKQ,cAAcG,UAAUC,IAAI,aACjCZ,EAAKO,UAAUI,UAAUE,OAAO,gBAEjCQ,OAAM,SAAAN,GACLO,QAAQC,IAAIR,EAAES,eAKpBxB,EAAKO,UAAUO,iBAAiB,SAAS,SAAAC,GACvC3B,IACGU,OACA4B,UACAN,MAAK,SAAAL,GACJf,EAAKC,WAAWU,UAAUE,OAAO,aACjCb,EAAKI,cAAcO,UAAUE,OAAO,aACpCb,EAAKK,SAASM,UAAUE,OAAO,aAC/Bb,EAAKM,UAAUK,UAAUE,OAAO,aAChCb,EAAKO,UAAUI,UAAUC,IAAI,aAC7BZ,EAAKQ,cAAcG,UAAUC,IAAI,aACjCH,aAAakB,cAKnBvC,IAASU,OAAO8B,oBAAmB,SAAAC,GAC7BA,GACFP,QAAQC,IAAIM,GACZpB,aAAaqB,QAAQ,eAAgBC,KAAKC,UAAUH,KAEpDP,QAAQC,IAAI,qB","file":"main.0da5645473466589b0a1.js","sourcesContent":["import '../styles.css';\r\n\r\nimport firebase from 'firebase/app';\r\n\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport 'firebaseui';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyC7TRb9mfyMhzQU-yq3pDKTxl2-zaHwRmo',\r\n  authDomain: 'filmoteka-login.firebaseapp.com',\r\n  databaseURL:\r\n    'https://filmoteka-login-default-rtdb.europe-west1.firebasedatabase.app',\r\n  projectId: 'filmoteka-login',\r\n  storageBucket: 'filmoteka-login.appspot.com',\r\n  messagingSenderId: '658952655924',\r\n  appId: '1:658952655924:web:26304edc0b944079c1e661',\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nconst myUi = new firebaseui.auth.AuthUI(firebase.auth());\r\n\r\nconst refs = {\r\n  emailInput: document.querySelector('.email-input'),\r\n  passwordInput: document.querySelector('.password-input'),\r\n  loginBtn: document.querySelector('.login'),\r\n  signupBtn: document.querySelector('.signup'),\r\n  logoutBtn: document.querySelector('.logout'),\r\n  alertNotAUser: document.querySelector('.alert-not-a-user'),\r\n};\r\n\r\n// checking if user is already logged in\r\nfunction loginChecker() {\r\n  const user = localStorage.getItem('firebaseUser');\r\n  if (user) {\r\n    refs.emailInput.classList.add('is-hidden');\r\n    refs.passwordInput.classList.add('is-hidden');\r\n    refs.loginBtn.classList.add('is-hidden');\r\n    refs.signupBtn.classList.add('is-hidden');\r\n    refs.logoutBtn.classList.remove('is-hidden');\r\n  }\r\n}\r\nloginChecker();\r\n\r\n// Login Event\r\nrefs.loginBtn.addEventListener('click', e => {\r\n  const email = refs.emailInput.value;\r\n  const password = refs.passwordInput.value;\r\n  const auth = firebase.auth();\r\n  const signIn = auth.signInWithEmailAndPassword(email, password);\r\n  signIn\r\n    .then(e => {\r\n      refs.emailInput.classList.add('is-hidden');\r\n      refs.passwordInput.classList.add('is-hidden');\r\n      refs.loginBtn.classList.add('is-hidden');\r\n      refs.signupBtn.classList.add('is-hidden');\r\n      refs.alertNotAUser.classList.add('is-hidden');\r\n      refs.logoutBtn.classList.remove('is-hidden');\r\n    })\r\n    .catch(e => {\r\n      console.log(e.message);\r\n      refs.alertNotAUser.classList.remove('is-hidden');\r\n    });\r\n});\r\n\r\n// signup Event\r\nrefs.signupBtn.addEventListener('click', e => {\r\n  const email = refs.emailInput.value;\r\n  const password = refs.passwordInput.value;\r\n  const auth = firebase.auth();\r\n  const signIn = auth.createUserWithEmailAndPassword(email, password);\r\n  signIn\r\n    .then(e => {\r\n      refs.emailInput.classList.add('is-hidden');\r\n      refs.passwordInput.classList.add('is-hidden');\r\n      refs.loginBtn.classList.add('is-hidden');\r\n      refs.signupBtn.classList.add('is-hidden');\r\n      refs.alertNotAUser.classList.add('is-hidden');\r\n      refs.logoutBtn.classList.remove('is-hidden');\r\n    })\r\n    .catch(e => {\r\n      console.log(e.message);\r\n    });\r\n});\r\n\r\n// logout event\r\nrefs.logoutBtn.addEventListener('click', e => {\r\n  firebase\r\n    .auth()\r\n    .signOut()\r\n    .then(e => {\r\n      refs.emailInput.classList.remove('is-hidden');\r\n      refs.passwordInput.classList.remove('is-hidden');\r\n      refs.loginBtn.classList.remove('is-hidden');\r\n      refs.signupBtn.classList.remove('is-hidden');\r\n      refs.logoutBtn.classList.add('is-hidden');\r\n      refs.alertNotAUser.classList.add('is-hidden');\r\n      localStorage.clear();\r\n    });\r\n});\r\n\r\n// realtime listener\r\nfirebase.auth().onAuthStateChanged(firebaseUser => {\r\n  if (firebaseUser) {\r\n    console.log(firebaseUser);\r\n    localStorage.setItem('firebaseUser', JSON.stringify(firebaseUser));\r\n  } else {\r\n    console.log('not logged in');\r\n  }\r\n});\r\n"],"sourceRoot":""}